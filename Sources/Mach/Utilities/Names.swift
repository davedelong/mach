//
//  File.swift
//  
//
//  Created by Dave DeLong on 12/26/24.
//

import Foundation

internal let fileTypeNames: Dictionary<Int32, String> = [
    MH_OBJECT: "object",
    MH_EXECUTE: "executable",
    MH_FVMLIB: "fixedVMSharedLibrary",
    MH_CORE: "core",
    MH_PRELOAD: "preloadedExecutable",
    MH_DYLIB: "dynamicLibrary",
    MH_DYLINKER: "dynamicLinkEditor",
    MH_BUNDLE: "bundle",
    MH_DYLIB_STUB: "dynamicLibraryStubs",
    MH_DSYM: "debugSymbols",
    MH_KEXT_BUNDLE: "kextBundle",
    MH_FILESET: "fileSet",
    MH_GPU_EXECUTE: "gpuExecutable",
    MH_GPU_DYLIB: "gpuDynamicLibrary",
]

internal let commandNames: Dictionary<UInt32, String> = [
    LC_REQ_DYLD: "LC_REQ_DYLD",
    UInt32(LC_SEGMENT): "LC_SEGMENT",
    UInt32(LC_SYMTAB): "LC_SYMTAB",
    UInt32(LC_SYMSEG): "LC_SYMSEG",
    UInt32(LC_THREAD): "LC_THREAD",
    UInt32(LC_UNIXTHREAD): "LC_UNIXTHREAD",
    UInt32(LC_LOADFVMLIB): "LC_LOADFVMLIB",
    UInt32(LC_IDFVMLIB): "LC_IDFVMLIB",
    UInt32(LC_IDENT): "LC_IDENT",
    UInt32(LC_FVMFILE): "LC_FVMFILE",
    UInt32(LC_PREPAGE): "LC_PREPAGE",
    UInt32(LC_DYSYMTAB): "LC_DYSYMTAB",
    UInt32(LC_LOAD_DYLIB): "LC_LOAD_DYLIB",
    UInt32(LC_ID_DYLIB): "LC_ID_DYLIB",
    UInt32(LC_LOAD_DYLINKER): "LC_LOAD_DYLINKER",
    UInt32(LC_ID_DYLINKER): "LC_ID_DYLINKER",
    UInt32(LC_PREBOUND_DYLIB): "LC_PREBOUND_DYLIB",
    UInt32(LC_ROUTINES): "LC_ROUTINES",
    UInt32(LC_SUB_FRAMEWORK): "LC_SUB_FRAMEWORK",
    UInt32(LC_SUB_UMBRELLA): "LC_SUB_UMBRELLA",
    UInt32(LC_SUB_CLIENT): "LC_SUB_CLIENT",
    UInt32(LC_SUB_LIBRARY): "LC_SUB_LIBRARY",
    UInt32(LC_TWOLEVEL_HINTS): "LC_TWOLEVEL_HINTS",
    UInt32(LC_PREBIND_CKSUM): "LC_PREBIND_CKSUM",
    LC_LOAD_WEAK_DYLIB: "LC_LOAD_WEAK_DYLIB",
    UInt32(LC_SEGMENT_64): "LC_SEGMENT_64",
    UInt32(LC_ROUTINES_64): "LC_ROUTINES_64",
    UInt32(LC_UUID): "LC_UUID",
    LC_RPATH: "LC_RPATH",
    UInt32(LC_CODE_SIGNATURE): "LC_CODE_SIGNATURE",
    UInt32(LC_SEGMENT_SPLIT_INFO): "LC_SEGMENT_SPLIT_INFO",
    LC_REEXPORT_DYLIB: "LC_REEXPORT_DYLIB",
    UInt32(LC_LAZY_LOAD_DYLIB): "LC_LAZY_LOAD_DYLIB",
    UInt32(LC_ENCRYPTION_INFO): "LC_ENCRYPTION_INFO",
    UInt32(LC_DYLD_INFO): "LC_DYLD_INFO",
    LC_DYLD_INFO_ONLY: "LC_DYLD_INFO_ONLY",
    LC_LOAD_UPWARD_DYLIB: "LC_LOAD_UPWARD_DYLIB",
    UInt32(LC_VERSION_MIN_MACOSX): "LC_VERSION_MIN_MACOSX",
    UInt32(LC_VERSION_MIN_IPHONEOS): "LC_VERSION_MIN_IPHONEOS",
    UInt32(LC_FUNCTION_STARTS): "LC_FUNCTION_STARTS",
    UInt32(LC_DYLD_ENVIRONMENT): "LC_DYLD_ENVIRONMENT",
    LC_MAIN: "LC_MAIN",
    UInt32(LC_DATA_IN_CODE): "LC_DATA_IN_CODE",
    UInt32(LC_SOURCE_VERSION): "LC_SOURCE_VERSION",
    UInt32(LC_DYLIB_CODE_SIGN_DRS): "LC_DYLIB_CODE_SIGN_DRS",
    UInt32(LC_ENCRYPTION_INFO_64): "LC_ENCRYPTION_INFO_64",
    UInt32(LC_LINKER_OPTION): "LC_LINKER_OPTION",
    UInt32(LC_LINKER_OPTIMIZATION_HINT): "LC_LINKER_OPTIMIZATION_HINT",
    UInt32(LC_VERSION_MIN_TVOS): "LC_VERSION_MIN_TVOS",
    UInt32(LC_VERSION_MIN_WATCHOS): "LC_VERSION_MIN_WATCHOS",
    UInt32(LC_NOTE): "LC_NOTE",
    UInt32(LC_BUILD_VERSION): "LC_BUILD_VERSION",
    LC_DYLD_EXPORTS_TRIE: "LC_DYLD_EXPORTS_TRIE",
    LC_DYLD_CHAINED_FIXUPS: "LC_DYLD_CHAINED_FIXUPS",
    LC_FILESET_ENTRY: "LC_FILESET_ENTRY",
    UInt32(LC_ATOM_INFO): "LC_ATOM_INFO",
]

internal let sectionTypeNames: Dictionary<UInt8, String> = [
    UInt8(S_REGULAR): "regular",
    UInt8(S_ZEROFILL): "zeroFill",
    UInt8(S_CSTRING_LITERALS): "cStringLiterals",
    UInt8(S_4BYTE_LITERALS): "fourByteLiterals",
    UInt8(S_8BYTE_LITERALS): "eightByteLiterals",
    UInt8(S_LITERAL_POINTERS): "literalPointers",
    UInt8(S_NON_LAZY_SYMBOL_POINTERS): "nonLazySymbolPointers",
    UInt8(S_LAZY_SYMBOL_POINTERS): "lazySymbolPointers",
    UInt8(S_SYMBOL_STUBS): "symbolStubs",
    UInt8(S_MOD_INIT_FUNC_POINTERS): "modInitFunctionPointers",
    UInt8(S_MOD_TERM_FUNC_POINTERS): "modTermFunctionPointers",
    UInt8(S_COALESCED): "coalesced",
    UInt8(S_GB_ZEROFILL): "gbZerofill",
    UInt8(S_INTERPOSING): "interposing",
    UInt8(S_16BYTE_LITERALS): "sixteenByteLiterals",
    UInt8(S_DTRACE_DOF): "dtraceObjectFormat",
    UInt8(S_LAZY_DYLIB_SYMBOL_POINTERS): "lazyDylibSymbolPointers",
    UInt8(S_THREAD_LOCAL_REGULAR): "threadLocalRegular",
    UInt8(S_THREAD_LOCAL_ZEROFILL): "threadLocalZerofill",
    UInt8(S_THREAD_LOCAL_VARIABLES): "threadLocalVariables",
    UInt8(S_THREAD_LOCAL_VARIABLE_POINTERS): "threadLocalVariablePointers",
    UInt8(S_THREAD_LOCAL_INIT_FUNCTION_POINTERS): "threadLocalInitFunctionPointers",
    UInt8(S_INIT_FUNC_OFFSETS): "initFunctionOffsets",
]

internal let sectionAttributeNames: Array<(SectionAttributes, String)> = [
    (.pureInstructions, "pureInstructions"),
    (.noTableOfContents, "noTableOfContents"),
    (.stripStaticSymbols, "stripStaticSymbols"),
    (.noDeadStrip, "noDeadStrip"),
    (.liveSupport, "liveSupport"),
    (.selfModifyingCode, "selfModifyingCode"),
    (.debug, "debug"),
    (.someInstructions, "someInstructions"),
    (.externalRelocationEntries, "externalRelocationEntries"),
    (.localRelocationEntries, "localRelocationEntries"),
].sorted(by: { $0.0.rawValue < $1.0.rawValue })

internal let buildToolNames: Dictionary<UInt32, String> = [
    UInt32(TOOL_CLANG): "clang",
    UInt32(TOOL_SWIFT): "swift",
    UInt32(TOOL_LD): "ld",
    UInt32(TOOL_LLD): "lld",
    UInt32(TOOL_METAL): "metal",
    UInt32(TOOL_AIRLLD): "airLLD",
    UInt32(TOOL_AIRNT): "airNT",
    UInt32(TOOL_AIRNT_PLUGIN): "airNTPlugin",
    UInt32(TOOL_AIRPACK): "airPack",
    UInt32(TOOL_GPUARCHIVER): "gpuArchiver",
    UInt32(TOOL_METAL_FRAMEWORK): "metalFramework",
]
